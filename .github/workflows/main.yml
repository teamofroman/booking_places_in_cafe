name: Booking bot

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_bot_image_and_push_to_dockerhub:
    if: github.ref == 'refs/heads/master'
    name: Build docker bot image and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push it
        uses: docker/build-push-action@v5
        with:
          context: ./bot
          push: true
          tags: rsateam/azucafe_bot:latest

  build_admin_image_and_push_to_dockerhub:
    if: github.ref == 'refs/heads/master'
    name: Build docker admin image and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push it
        uses: docker/build-push-action@v5
        with:
          context: ./admin_panel
          push: true
          tags: rsateam/azucafe_admin:latest

  deploy_to_server:
    name: Deploy project to server
    runs-on: ubuntu-latest
    needs:
      - build_bot_image_and_push_to_dockerhub
      - build_admin_image_and_push_to_dockerhub

    steps:
      - uses: actions/checkout@v4

      - name: Make needs dir
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PHRASE }}
          script: mkdir -p /home/${{ secrets.SSH_USER }}/azubot/infra/config 

      - name: Copy docker compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PHRASE }}
          source: "./infra/docker-compose_prod.yml"
          target: /home/${{ secrets.SSH_USER }}/azubot/
        
      - name: Copy nginx files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PHRASE }}
          source: "./infra/config/index.html,./infra/config/nginx.conf"
          target: /home/${{ secrets.SSH_USER }}/azubot/

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PHRASE }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/azubot/infra
            sudo docker compose --file ./docker-compose_prod.yml stop
            sudo docker compose --file ./docker-compose_prod.yml rm -f azucafe_admin
            sudo docker compose --file ./docker-compose_prod.yml rm -f azucafe_bot
            sudo docker pull rsateam/azucafe_admin:latest
            sudo docker pull rsateam/azucafe_bot:latest
            echo ENGINE=${{ secrets.ENGINE }} > ./config/.general
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> ./config/.general
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> ./config/.general
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> ./config/.general
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> ./config/.general
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> ./config/.general
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> ./config/.general
            echo DEBUG=${{ secrets.DEBUG }} >> ./config/.general
            echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> ./config/.general
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> ./config/.general
            echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> ./config/.general
            echo MERCHANT_LOGIN=${{ secrets.MERCHANT_LOGIN }} >> ./config/.general
            echo MERCHANT_PASSWORD1=${{ secrets.MERCHANT_PASSWORD1 }} >> ./config/.general
            echo MERCHANT_PASSWORD2=${{ secrets.MERCHANT_PASSWORD2 }} >> ./config/.general
            echo PAYMENT_TIMEOUT=${{ secrets.PAYMENT_TIMEOUT }} >> ./config/.general
            echo BOT_ADDRESS=${{ secrets.BOT_ADDRESS }} >> ./config/.general
            echo TEST_MODE=${{ secrets.TEST_MODE }} >> ./config/.general
            sudo docker compose --file ./docker-compose_prod.yml up -d
